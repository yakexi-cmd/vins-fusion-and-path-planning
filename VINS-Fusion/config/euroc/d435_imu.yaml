%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1  

imu_topic: "/handsfree/imu"
image0_topic: "/camera/color/image_raw"
# image1_topic: "/camera/color/image_raw"
output_path: "/home/lemontech/output/"

cam0_calib: "cam0_realsense.yaml"
# cam1_calib: "cam1_realsense.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
#d435出场参数和imu联合标定 0708---新更精确    [相机转至imu坐标系下]  
   data: [ -0.02697577, -0.05522231, -0.99810962,-0.07709354,
           0.99817245, -0.05549977, -0.02390683,-0.04349007,
           -0.05407467, -0.99693042,  0.05661853,0.02127691,
           0,0,0,1]
 #d435和imu联合标定得到的旋转参数0708-从相机坐标系转换到imu下
#    data: [ -0.15361311, -0.03403804, -0.98754464,-0.23288653,
#            0.98788374,  0.01706932, -0.15425419,-0.02742175,
#            0.02210723, -0.99927476,  0.03100356,0.03197431,
#            0,0,0,1]
#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.08          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.004         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.00004         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 2.0e-6       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
# %YAML:1.0

# #common parameters
# #support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
# imu: 1         
# num_of_cam: 1  

# imu_topic: "/handsfree/imu"
# image0_topic: "/camera/color/image_raw"
# image1_topic: "/camera/color/image_raw"
# output_path: "/home/lemontech/output/"

# cam0_calib: "cam0_realsense.yaml"
# cam1_calib: "cam0_realsense.yaml"

# # Extrinsic parameter between IMU and Camera.
# estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
#                         # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ -0.15361311, -0.03403804, -0.98754464,-0.23288653,
#            0.98788374,  0.01706932, -0.15425419, -0.02742175,
#            0.02210723, -0.99927476,  0.03100356,0.03197431,
#            0, 0, 0, 1]

# #Multiple thread support
# multiple_thread: 1

# #feature traker paprameters
# max_cnt: 150            # max feature number in feature tracking
# min_dist: 30            # min distance between two features 
# freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
# F_threshold: 1.0        # ransac threshold (pixel)
# show_track: 1           # publish tracking image as topic
# flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

# #optimization parameters
# max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
# max_num_iterations: 8   # max solver itrations, to guarantee real time
# keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

# #imu parameters       The more accurate parameters you provide, the better performance
# acc_n: 0.08          # accelerometer measurement noise standard deviation. #0.2   0.04
# gyr_n: 0.004         # gyroscope measurement noise standard deviation.     #0.05  0.004
# acc_w: 0.00004         # accelerometer bias random work noise standard deviation.  #0.02
# gyr_w: 2.0e-6       # gyroscope bias random work noise standard deviation.     #4.0e-5
# g_norm: 9.81007     # gravity magnitude

# #unsynchronization parameters
# estimate_td: 0                      # online estimate time offset between camera and imu
# td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

# #loop closure parameters
# load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
# pose_graph_save_path: "~/output/pose_graph/" # save and load path
# save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
# -----
